diff --git a/backends/platform/sdl/posix/posix-main.cpp b/backends/platform/sdl/posix/posix-main.cpp
index 5f0914e..081ad25 100644
--- a/backends/platform/sdl/posix/posix-main.cpp
+++ b/backends/platform/sdl/posix/posix-main.cpp
@@ -20,6 +20,13 @@
  *
  */
 
+#define FORBIDDEN_SYMBOL_EXCEPTION_printf
+#define FORBIDDEN_SYMBOL_EXCEPTION_vprintf
+#define FORBIDDEN_SYMBOL_EXCEPTION_vfprintf
+#define FORBIDDEN_SYMBOL_EXCEPTION_mkdir
+#define FORBIDDEN_SYMBOL_EXCEPTION_setenv
+#define FORBIDDEN_SYMBOL_EXCEPTION_unistd_h
+
 #include "common/scummsys.h"
 
 #if defined(POSIX) && !defined(MACOSX) && !defined(SAMSUNGTV) && !defined(MAEMO) && !defined(WEBOS) && !defined(LINUXMOTO) && !defined(GPH_DEVICE) && !defined(GP2X) && !defined(DINGUX) && !defined(OPENPANDORA) && !defined(PLAYSTATION3)
@@ -28,7 +35,46 @@
 #include "backends/plugins/sdl/sdl-provider.h"
 #include "base/main.h"
 
+#if defined(NACL)
+#include <fcntl.h>
+#include <libtar.h>
+#include <stdlib.h>
+#include <sys/mount.h>
+#include <unistd.h>
+#include <SDL/SDL_main.h>
+
+#include "nacl_io/nacl_io.h"
+#endif
+
+#if defined(NACL)
+
+#define CHECK(x) ret = x; assert(ret == 0)
+
+void extract_all(const char* data_file) {
+	printf("Extracting: %s ...\n", data_file);
+	TAR* tar;
+        int ret;
+	CHECK(tar_open(&tar, (char*)data_file, NULL, O_RDONLY, 0, 0));
+	CHECK(tar_extract_all(tar, "/"));
+	CHECK(tar_close(tar));
+}
+
+int SDL_main(int argc, char *argv[]) {
+	int ret;
+	CHECK(umount("/"));
+	CHECK(mount("", "/", "memfs", 0, NULL));
+	CHECK(mount("./", "/mnt/tars", "httpfs", 0, NULL));
+
+	extract_all("/mnt/tars/runimage.tar");
+	extract_all("/mnt/tars/bass.tar");
+	extract_all("/mnt/tars/lure.tar");
+
+	CHECK(mkdir("/home", 0777));
+        CHECK(mount("", "/home", "html5fs", 0, "type=PERSISTENT"));
+	CHECK(setenv("HOME", "/home", 1));
+#else
 int main(int argc, char *argv[]) {
+#endif
 
 	// Create our OSystem instance
 	g_system = new OSystem_POSIX();
diff --git a/backends/platform/sdl/posix/posix.cpp b/backends/platform/sdl/posix/posix.cpp
index 7a8b1e7..6a9b94f 100644
--- a/backends/platform/sdl/posix/posix.cpp
+++ b/backends/platform/sdl/posix/posix.cpp
@@ -160,6 +160,9 @@ Common::WriteStream *OSystem_POSIX::createLogFile() {
 }
 
 bool OSystem_POSIX::displayLogFile() {
+#ifdef NACL
+	return false;
+#else
 	if (_logFilePath.empty())
 		return false;
 
@@ -208,6 +211,7 @@ bool OSystem_POSIX::displayLogFile() {
 	}
 
 	return WIFEXITED(status) && WEXITSTATUS(status) == 0;
+#endif
 }
 
 
diff --git a/configure b/configure
index 5016a86..274de63 100755
--- a/configure
+++ b/configure
@@ -1338,6 +1338,11 @@ n64)
 	_host_cpu=mips
 	_host_alias=mips64
 	;;
+nacl)
+	_host_os=nacl
+	_host_cpu=x86
+	_host_alias=${NACL_CROSS_PREFIX}
+	;;
 neuros)
 	_host_os=linux
 	_host_cpu=arm
@@ -1731,7 +1736,7 @@ if test "$have_gcc" = yes ; then
 			case $_host_os in
 			# newlib-based system include files suppress non-C89 function
 			# declarations under __STRICT_ANSI__
-			amigaos* | android | bada | dreamcast | ds | gamecube | mingw* | n64 | psp | ps2 | ps3 | wii | wince )
+			amigaos* | android | bada | dreamcast | ds | gamecube | mingw* | n64 | psp | ps2 | ps3 | wii | wince | *nacl* )
 				;;
 			*)
 				CXXFLAGS="$CXXFLAGS -ansi"
@@ -2918,6 +2923,9 @@ case $_host_os in
 	android | beos* | bsd* | darwin* | freebsd* | gph-linux | haiku* | hpux* | iphone | irix* | linux* | maemo | mint* | netbsd* | openbsd* | solaris* | sunos* | uclinux* | webos)
 		_posix=yes
 		;;
+	*nacl*)
+		_posix=yes
+                ;;
 	os2-emx*)
 		_posix=yes	# FIXME: Really???
 		;;
diff --git a/graphics/scaler/scale2x.cpp b/graphics/scaler/scale2x.cpp
index ac2dbad..0fc0603 100644
--- a/graphics/scaler/scale2x.cpp
+++ b/graphics/scaler/scale2x.cpp
@@ -201,9 +201,15 @@ static inline void scale2x_8_mmx_single(scale2x_uint8* dst, const scale2x_uint8*
 		"0:\n"
 
 		/* set the current, current_pre, current_next registers */
+#if defined(__x86_64__)
+		"movq %%nacl:-8(%%r15,%q1), %%mm0\n"
+		"movq %%nacl:(%%r15,%q1), %%mm7\n"
+		"movq %%nacl:8(%%r15,%q1), %%mm1\n"
+#else
 		"movq -8(%1), %%mm0\n"
 		"movq (%1), %%mm7\n"
 		"movq 8(%1), %%mm1\n"
+#endif
 		"psrlq $56, %%mm0\n"
 		"psllq $56, %%mm1\n"
 		"movq %%mm7, %%mm2\n"
@@ -214,7 +220,11 @@ static inline void scale2x_8_mmx_single(scale2x_uint8* dst, const scale2x_uint8*
 		"por %%mm3, %%mm1\n"
 
 		/* current_upper */
+#if defined(__x86_64__)
+		"movq %%nacl:(%%r15,%q0), %%mm6\n"
+#else
 		"movq (%0), %%mm6\n"
+#endif
 
 		/* compute the upper-left pixel for dst on %%mm2 */
 		/* compute the upper-right pixel for dst on %%mm4 */
@@ -224,8 +234,13 @@ static inline void scale2x_8_mmx_single(scale2x_uint8* dst, const scale2x_uint8*
 		"movq %%mm1, %%mm5\n"
 		"pcmpeqb %%mm6, %%mm2\n"
 		"pcmpeqb %%mm6, %%mm4\n"
+#if defined(__x86_64__)
+		"pcmpeqb %%nacl:(%%r15,%q2), %%mm3\n"
+		"pcmpeqb %%nacl:(%%r15,%q2), %%mm5\n"
+#else
 		"pcmpeqb (%2), %%mm3\n"
 		"pcmpeqb (%2), %%mm5\n"
+#endif
 		"pandn %%mm2, %%mm3\n"
 		"pandn %%mm4, %%mm5\n"
 		"movq %%mm0, %%mm2\n"
@@ -247,8 +262,13 @@ static inline void scale2x_8_mmx_single(scale2x_uint8* dst, const scale2x_uint8*
 		"movq %%mm2, %%mm3\n"
 		"punpcklbw %%mm4, %%mm2\n"
 		"punpckhbw %%mm4, %%mm3\n"
+#if defined(__x86_64__)
+		"movq %%mm2, %%nacl:(%%r15,%q3)\n"
+		"movq %%mm3, %%nacl:8(%%r15,%q3)\n"
+#else
 		"movq %%mm2, (%3)\n"
 		"movq %%mm3, 8(%3)\n"
+#endif
 
 		/* next */
 		"add $8, %0\n"
@@ -278,9 +298,15 @@ static inline void scale2x_16_mmx_single(scale2x_uint16* dst, const scale2x_uint
 		"0:\n"
 
 		/* set the current, current_pre, current_next registers */
+#if defined(__x86_64__)
+		"movq %%nacl:-8(%%r15,%q1), %%mm0\n"
+		"movq %%nacl:(%%r15,%q1), %%mm7\n"
+		"movq %%nacl:8(%%r15,%q1), %%mm1\n"
+#else
 		"movq -8(%1), %%mm0\n"
 		"movq (%1), %%mm7\n"
 		"movq 8(%1), %%mm1\n"
+#endif
 		"psrlq $48, %%mm0\n"
 		"psllq $48, %%mm1\n"
 		"movq %%mm7, %%mm2\n"
@@ -291,7 +317,11 @@ static inline void scale2x_16_mmx_single(scale2x_uint16* dst, const scale2x_uint
 		"por %%mm3, %%mm1\n"
 
 		/* current_upper */
+#if defined(__x86_64__)
+		"movq %%nacl:(%%r15,%q0), %%mm6\n"
+#else
 		"movq (%0), %%mm6\n"
+#endif
 
 		/* compute the upper-left pixel for dst on %%mm2 */
 		/* compute the upper-right pixel for dst on %%mm4 */
@@ -301,8 +331,13 @@ static inline void scale2x_16_mmx_single(scale2x_uint16* dst, const scale2x_uint
 		"movq %%mm1, %%mm5\n"
 		"pcmpeqw %%mm6, %%mm2\n"
 		"pcmpeqw %%mm6, %%mm4\n"
+#if defined(__x86_64__)
+		"pcmpeqw %%nacl:(%%r15,%q2), %%mm3\n"
+		"pcmpeqw %%nacl:(%%r15,%q2), %%mm5\n"
+#else
 		"pcmpeqw (%2), %%mm3\n"
 		"pcmpeqw (%2), %%mm5\n"
+#endif
 		"pandn %%mm2, %%mm3\n"
 		"pandn %%mm4, %%mm5\n"
 		"movq %%mm0, %%mm2\n"
@@ -324,8 +359,13 @@ static inline void scale2x_16_mmx_single(scale2x_uint16* dst, const scale2x_uint
 		"movq %%mm2, %%mm3\n"
 		"punpcklwd %%mm4, %%mm2\n"
 		"punpckhwd %%mm4, %%mm3\n"
+#if defined(__x86_64__)
+		"movq %%mm2, %%nacl:(%%r15,%q3)\n"
+		"movq %%mm3, %%nacl:8(%%r15,%q3)\n"
+#else
 		"movq %%mm2, (%3)\n"
 		"movq %%mm3, 8(%3)\n"
+#endif
 
 		/* next */
 		"add $8, %0\n"
@@ -355,9 +395,15 @@ static inline void scale2x_32_mmx_single(scale2x_uint32* dst, const scale2x_uint
 		"0:\n"
 
 		/* set the current, current_pre, current_next registers */
+#if defined(__x86_64__)
+		"movq %%nacl:-8(%%r15,%q1), %%mm0\n"
+		"movq %%nacl:(%%r15,%q1), %%mm7\n"
+		"movq %%nacl:8(%%r15,%q1), %%mm1\n"
+#else
 		"movq -8(%1), %%mm0\n"
 		"movq (%1), %%mm7\n"
 		"movq 8(%1), %%mm1\n"
+#endif
 		"psrlq $32, %%mm0\n"
 		"psllq $32, %%mm1\n"
 		"movq %%mm7, %%mm2\n"
@@ -368,7 +414,11 @@ static inline void scale2x_32_mmx_single(scale2x_uint32* dst, const scale2x_uint
 		"por %%mm3, %%mm1\n"
 
 		/* current_upper */
+#if defined(__x86_64__)
+		"movq %%nacl:(%%r15,%q0), %%mm6\n"
+#else
 		"movq (%0), %%mm6\n"
+#endif
 
 		/* compute the upper-left pixel for dst on %%mm2 */
 		/* compute the upper-right pixel for dst on %%mm4 */
@@ -378,8 +428,13 @@ static inline void scale2x_32_mmx_single(scale2x_uint32* dst, const scale2x_uint
 		"movq %%mm1, %%mm5\n"
 		"pcmpeqd %%mm6, %%mm2\n"
 		"pcmpeqd %%mm6, %%mm4\n"
+#if defined(__x86_64__)
+		"pcmpeqd %%nacl:(%%r15,%q2), %%mm3\n"
+		"pcmpeqd %%nacl:(%%r15,%q2), %%mm5\n"
+#else
 		"pcmpeqd (%2), %%mm3\n"
 		"pcmpeqd (%2), %%mm5\n"
+#endif
 		"pandn %%mm2, %%mm3\n"
 		"pandn %%mm4, %%mm5\n"
 		"movq %%mm0, %%mm2\n"
@@ -401,8 +456,13 @@ static inline void scale2x_32_mmx_single(scale2x_uint32* dst, const scale2x_uint
 		"movq %%mm2, %%mm3\n"
 		"punpckldq %%mm4, %%mm2\n"
 		"punpckhdq %%mm4, %%mm3\n"
+#if defined(__x86_64__)
+		"movq %%mm2, %%nacl:(%%r15,%q3)\n"
+		"movq %%mm3, %%nacl:8(%%r15,%q3)\n"
+#else
 		"movq %%mm2, (%3)\n"
 		"movq %%mm3, 8(%3)\n"
+#endif
 
 		/* next */
 		"add $8, %0\n"
