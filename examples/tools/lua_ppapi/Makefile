# Copyright (c) 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

VALID_TOOLCHAINS := glibc newlib pnacl
NACL_SDK_ROOT ?= $(abspath $(CURDIR)/../../..)
include $(NACL_SDK_ROOT)/tools/common.mk

TARGET = lua
LIBS = lua ppapi_simple tar nacl_io ppapi_cpp ppapi nosys
ifeq ($(TOOLCHAIN),glibc)
LIBS += util dl
NACL_LDFLAGS += -Wl,-export-dynamic
endif
SOURCES = lua.c main.c
INSTALL_DIR = $(NACL_PACKAGES_PUBLISH)/lua/$(TOOLCHAIN)

ifeq ($(TOOLCHAIN),pnacl)
EXEEXT=.pexe
else
EXEEXT=.nexe
endif

# We want the nmf to contain all the .nexe we have previously
# built as well as the one currently being built, so we modify
# the list of executables that we pass to create_nmf.
EXECUTABLES += $(wildcard $(OUTDIR)/$(TARGET)_*$(EXEEXT))
#$(error $(EXECUTABLES))

# Build rules generated by macros from common.mk:

$(foreach src,$(SOURCES),$(eval $(call COMPILE_RULE,$(src),$(CFLAGS))))

ifeq ($(CONFIG),Release)
$(eval $(call LINK_RULE,$(TARGET)_unstripped,$(SOURCES),$(LIBS),$(DEPS)))
$(eval $(call STRIP_RULE,$(TARGET),$(TARGET)_unstripped))
else
$(eval $(call LINK_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
endif

$(eval $(call NMF_RULE,$(TARGET),))

CHROMEAPPS = $(NACL_SRC)/libraries/hterm/src/chromeapps
LIB_DOT = $(CHROMEAPPS)/libdot
NASSH = $(CHROMEAPPS)/nassh

install:
	mkdir -p $(INSTALL_DIR)
	tar -c -C ${NACLPORTS_PREFIX} -f $(INSTALL_DIR)/luadata.tar lib/lua
	LIBDOT_SEARCH_PATH=$(CHROMEAPPS) $(LIB_DOT)/bin/concat.sh -i $(NASSH)/concat/nassh_deps.concat -o $(INSTALL_DIR)/hterm.concat.js
	cp $(OUTDIR)/lua*$(NACL_EXEEXT) $(INSTALL_DIR)
	cp $(OUTDIR)/lua.nmf $(INSTALL_DIR)
	cp index.html $(INSTALL_DIR)
	cp lua.js $(INSTALL_DIR)
ifeq ($(TOOLCHAIN),glibc)
	cp -r $(OUTDIR)/lib* $(INSTALL_DIR)
endif
